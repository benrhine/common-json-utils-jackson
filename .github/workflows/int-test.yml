name: Integration Test & Upload Coverage

on:
  workflow_call:                            # Allows file to be triggered from another workflow
    inputs:
      os:
        description: 'OS'
        type: string
        required: true
      gradle-version:
        description: 'Gradle version'
        type: string
        required: true

  workflow_dispatch:                        # Allows file to be triggered manually from the repository
    inputs:
      os:
        description: 'OS'
        type: choice
        options:
          - ubuntu-latest
          - macos-latest
          - windows-latest
        required: false
        default: 'ubuntu-latest'
      gradle-version:
        description: 'Gradle version'
        type: choice
        options:
          - '7.6'
          - '7.6.1'
        required: false
        default: '7.6'

jobs:
  unit-tests:
    runs-on: ${{ inputs.os }}
    env:
      # on MAC OS, we need to set this environment variable
      # to fix problems with the fork() calls (see this thread
      # for more information: http://sealiesoftware.com/blog/archive/2017/6/5/Objective-C_and_fork_in_macOS_1013.html)
      OBJC_DISABLE_INITIALIZE_FORK_SAFETY: "YES"

    defaults:
      run:
        shell: bash

    steps:
      - uses: actions/checkout@v3
      - name: Set Gradle Version
        run: ./gradlew wrapper --gradle-version=${{ inputs.gradle-version }}
      - name: Verify Gradle Version Set
        run: ./gradlew -v
      - uses: gradle/wrapper-validation-action@v1
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'corretto' # List of supported jvms https://github.com/actions/setup-java
          server-id: github # Value of the distributionManagement/repository/id field of the pom.xml
          settings-path: ${{ github.workspace }} # location for the settings.xml file
          cache: gradle
#      - name: Setup environment
#        uses: benrhine/common-json-utils-jackson/.github/workflows/setup-gradle-environment.yml@main
#        with:
#          gradle-version: ${{ inputs.gradle-version }}
#          os: ${{ inputs.os }}

      - name: Integration Test with Gradle
        run: ./gradlew integrationTest

      - name: Archive int test report
        uses: actions/upload-artifact@v3
        with:
          name: Integration Test report
          path: build/intJacoco.zip