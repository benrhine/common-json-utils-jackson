name: Build, Lint, Unit Test, Integration Test, and Publish

on:
  workflow_dispatch:
  workflow_call:
  push:
    branches: ["main", "develop"]
    paths-ignore: ["docs/**", "docker/**", "*", "!pyproject.toml", "**.md"]
  pull_request:
    types: [opened, synchronize, ready_for_review]
    paths-ignore: ["docs/**", "docker/**", "*", "!pyproject.toml", "**.md"]

concurrency:
  # New commit on branch cancels running workflows of the same branch
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  ubuntu-setup-gradle-environment:
    if: github.event.pull_request.draft == false
    strategy:
      matrix:
        os: [ ubuntu-latest ]
        gradle-version: [ "7.6", "7.6.1" ]
      fail-fast: false
    uses: ./.github/workflows/setup-gradle-environment.yml@{main}
    with:
      os: ${{ matrix.os }}
      gradle-version: ${{ matrix.gradle-version }}

  ubuntu-unit-test-gradle-environment:
    needs: ubuntu-setup-gradle-environment
    strategy:
      matrix:
        os: [ ubuntu-latest ]
        gradle-version: [ "7.6", "7.6.1" ]
      fail-fast: false
    runs-on: ${{ matrix.os }}
    steps:
      - uses: ./.github/workflows/setup-gradle-environment.yml@{main}
      - name: Build with Gradle
        run: ./gradlew test

#  windows-setup-gradle-environment:
#    if: github.event.pull_request.draft == false
#    strategy:
#      matrix:
#        os: [ windows-latest ]
#        gradle-version: [ "7.6", "7.6.1" ]
#      fail-fast: false
#    runs-on: ${{ matrix.os }}
#    steps:
#      - uses: actions/checkout@v3
#      - name: Set Gradle Version
#        run: ./gradlew wrapper --gradle-version=${{ matrix.gradle-version }}
#      - name: Check Gradle Version Set
#        run: ./gradlew -v
#      - uses: gradle/wrapper-validation-action@v1
#      - name: Set up JDK 17
#        uses: actions/setup-java@v3
#        with:
#          java-version: '17'
#          distribution: 'corretto' # List of supported jvms https://github.com/actions/setup-java
#          server-id: github # Value of the distributionManagement/repository/id field of the pom.xml
#          settings-path: ${{ github.workspace }} # location for the settings.xml file
#          cache: gradle
#
#      - name: Build with Gradle
#        run: ./gradlew test
#
#  macos-setup-gradle-environment:
#    if: github.event.pull_request.draft == false
#    strategy:
#      matrix:
#        os: [ macos-latest ]
#        gradle-version: [ "7.6", "7.6.1" ]
#      fail-fast: false
#    runs-on: ${{ matrix.os }}
#    steps:
#      - uses: actions/checkout@v3
#      - name: Set Gradle Version
#        run: ./gradlew wrapper --gradle-version=${{ matrix.gradle-version }}
#      - name: Check Gradle Version Set
#        run: ./gradlew -v
#      - uses: gradle/wrapper-validation-action@v1
#      - name: Set up JDK 17
#        uses: actions/setup-java@v3
#        with:
#          java-version: '17'
#          distribution: 'corretto' # List of supported jvms https://github.com/actions/setup-java
#          server-id: github # Value of the distributionManagement/repository/id field of the pom.xml
#          settings-path: ${{ github.workspace }} # location for the settings.xml file
#          cache: gradle
#
#      - name: Build with Gradle
#        run: ./gradlew test
#  ubuntu-setup-gradle-environment:
#    if: github.event.pull_request.draft == false
#    strategy:
#      matrix:
#        os: [ ubuntu-latest ]
#        gradle-version: [ "7.6", "7.6.1" ]
#      fail-fast: false
#    uses: .github/workflows/setup-gradle-environment.yml
#    with:
#      gradle-version: ${{ matrix.gradle-version }}
#      os: ${{ matrix.os }}
#    secrets: inherit
#
#  windows-setup-gradle-environment:
#    if: github.event.pull_request.draft == false
#    strategy:
#      matrix:
#        os: [ windows-latest ]
#        gradle-version: [ "7.6", "7.6.1" ]
#      fail-fast: false
#    uses: .github/workflows/setup-gradle-environment.yml
#    with:
#      gradle-version: ${{ matrix.gradle-version }}
#      os: ${{ matrix.os }}
#    secrets: inherit
#
#  macos-setup-gradle-environment:
#    if: github.event.pull_request.draft == false
#    strategy:
#      matrix:
#        os: [ macos-latest ]
#        gradle-version: [ "7.6", "7.6.1" ]
#      fail-fast: false
#    uses: .github/workflows/setup-gradle-environment.yml
#    with:
#      gradle-version: ${{ matrix.gradle-version }}
#      os: ${{ matrix.os }}
#    secrets: inherit

#  ubuntu-lint-unit-test:
#    needs: ubuntu-setup-python-environment
#    strategy:
#      matrix:
#        os: [ ubuntu-latest ]
#        gradle-version: [ "7.6", "7.6.1" ]
#      fail-fast: false
#    uses: ./.github/workflows/unit-test.yml
#    with:
#      os: ${{ matrix.os }}
#      gradle-version: ${{ matrix.gradle-version }}
#    secrets: inherit
#
#  windows-lint-unit-test:
#    needs: windows-setup-python-environment
#    strategy:
#      matrix:
#        os: [ windows-latest ]
#        gradle-version: [ "7.6", "7.6.1" ]
#      fail-fast: false
#    uses: ./.github/workflows/unit-test.yml
#    with:
#      os: ${{ matrix.os }}
#      gradle-version: ${{ matrix.gradle-version }}
#    secrets: inherit
#
#  macos-lint-unit-test:
#    needs: macos-setup-python-environment
#    strategy:
#      matrix:
#        os: [ macos-latest ]
#        gradle-version: [ "7.6", "7.6.1" ]
#      fail-fast: false
#    uses: ./.github/workflows/unit-test.yml
#    with:
#      os: ${{ matrix.os }}
#      gradle-version: ${{ matrix.gradle-version }}
#    secrets: inherit